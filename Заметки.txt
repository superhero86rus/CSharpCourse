var - ключевое слово, указывающее на то, что тип переменной определяется выражением, указанным справа от оператора присваивания

Анонимный объект
var o = new { Title="C#", Length=40};

Единственный класс, который изменяет строку - StringBuilder.
Поэтому, если собираем строку в цикле, используем этот класс.

ref - передача параметра по ссылке (т.е. мы можем внутри метода модифицировать параметр, который находится снаружи)
out - тот-же ref, но позволяет передавать ссылку на не инициализированную переменную

Именованные параметры позволяют вызывать функции в которых не важен порядок следования параметров
public static void sayHello(string name, int age);
sayHello(age:33, name:"Sergey")

Дефолтные значения (подставляются, если параметр(ы) не указаны)
public static void sayHello(string name = "Незнакомец", int age = "27");

Меню - Анализ - Профилировщик производительности. Утилита позволяет анализировать потребление ресурсов приложением

Модификаторы доступа:
public - доступ из всех мест программы
private - доступ изнутри только данного типа
internal - доступ только из текущей сборки
protected - доступ для этого типа и его наследников

C# v8 (комбинации)
protected internal - вне наследники + все классы этой сборки
private protected - только те наследники, которые в этой сборке

Коллекции
ArrayList - динамический массив
BitArray
Hashtable
Queue - FIFO очередь
SortedList
Stack
StringCollection

LINQ
var drinks =
	from string drink in prices.Keys
	orderedby prices[drink] ascending
	select drink;

Делегат - обьект содержащий набор ссылок на определенные методы